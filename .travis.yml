# Generic .travis.yml file for running continuous integration on Travis-CI for
# any ROS package.
#
# Available here:
#   - https://github.com/felixduvallet/ros-travis-integration
#
# This installs ROS on a clean Travis-CI virtual machine, creates a ROS
# workspace, resolves all listed dependencies, and sets environment variables
# (setup.bash). Then, it compiles the entire ROS workspace (ensuring there are
# no compilation errors), and runs all the tests. If any of the compilation/test
# phases fail, the build is marked as a failure.
#
# We handle two types of package dependencies specified in the package manifest:
#   - system dependencies that can be installed using `rosdep`, including other
#     ROS packages and system libraries. These dependencies must be known to
#     `rosdistro` and are installed using apt-get.
#   - package dependencies that must be checked out from source. These are handled by
#     `wstool`, and should be listed in a file named dependencies.rosinstall.
#

# There are envioronment variables you may want to change, such as ROS_DISTRO,
# ROSINSTALL_FILE, and the CATKIN_OPTIONS file.  See the README.md for more
# information on these flags, and
# https://docs.travis-ci.com/user/environment-variables/ for information about
# Travis environment variables in general.
#
# Author: Felix Duvallet <felixd@gmail.com>

# NOTE: The build lifecycle on Travis.ci is something like this:
#    before_install
#    install
#    before_script
#    script
#    after_success or after_failure
#    after_script
#    OPTIONAL before_deploy
#    OPTIONAL deploy
#    OPTIONAL after_deploy

################################################################################


# Build all valid Ubuntu/ROS combinations available on Travis VMs.
language: generic
sudo: required
cache:
  - apt
matrix:
  include:
  - name: "focal noetic"
    dist: focal
    env: ROS_DISTRO=noetic

# Configuration variables. All variables are global now, but this can be used to
# trigger a build matrix for different ROS distributions if desired.
env:
  global:
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [trusty|xenial|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - PACKAGE_PATH=auvic_tests
    
################################################################################

# Install system dependencies, IE ROS and other system stuff
before_install:
  # Install ros barebones
  - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
  - sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
  - sudo apt update
  - sudo apt install ros-noetic-ros-base
  # install roslint and rostest
  - sudo apt install ros-noetic-roslint ros-noetic-rostest
  - source /opt/ros/noetic/setup.bash
  # Install Rosdep
  - sudo apt-get install python3-rosdep
  - sudo rosdep init
  - rosdep update
  # Install socketCAN
  - sudo apt-get install canutils
  - sudo modprobe can
  - sudo modprobe vcan
  - sudo modprobe slcan

# Go into trident and run the system
install:
  - cd trident
  - catkin_make
  - source devel/setup.bash

# Install all dependencies, using rosdep.
before_script:
  - rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
  - cd src/$PACKAGE_PATH